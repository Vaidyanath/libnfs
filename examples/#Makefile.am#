noinst_PROGRAMS = nfsclient-async nfsclient-raw nfsclient-sync nfsclient-bcast nfsclient-listservers nfs-ls nfs-cp nfs-io

AM_CPPFLAGS = \
	-I$(abs_top_srcdir)/include \
	-I$(abs_top_srcdir)/include/nfsc \
	-I$(abs_top_srcdir)/mount \
	-I$(abs_top_srcdir)/nfs \
	-I$(abs_top_srcdir)/rquota \
	-I$(abs_top_srcdir)/portmap \
	"-D_U_=__attribute__((unused))"

AM_LDFLAGS = ../lib/.libs/libnfs.la -lpopt

nfs_ls_SOURCES = nfs-ls.c

nfs_cp_SOURCES = nfs-cp.c

nfs_io_SOURCES = nfs-io.c

nfsclient_async_SOURCES = nfsclient-async.c

nfsclient_raw_SOURCES = nfsclient-raw.c

nfsclient_sync_SOURCES = nfsclient-sync.c

nfsclient_bcast_SOURCES = nfsclient-bcast.c

nfsclient_listservers_SOURCES = nfsclient-listservers.c

# LD_PRELOAD library.

if LD_ISCSI
EXTRA_PROGRAMS += bld_iscsi
CLEANFILES += bin/ld_iscsi.o bin/ld_iscsi.so

# This gets a bit messy:
#
# 1) let automake compile the sources
bin_ld_iscsi_SOURCES = src/ld_iscsi.c
bin_ld_iscsi_CFLAGS = $(AM_CFLAGS) -fPIC

# 2) let libtool link in the static version of the library
noinst_LTLIBRARIES = lib/libiscsi_convenience.la
lib_libiscsi_convenience_la_SOURCES = $(lib_libiscsi_la_SOURCES)
bin/ld_iscsi.o: src/bin_ld_iscsi-ld_iscsi.o lib/libiscsi_convenience.la
	$(LIBTOOL) --mode=link $(CC) -o $@ $^

# 3) Manually create the .so file.
bin_SCRIPTS = bin/ld_iscsi.so
bin/ld_iscsi.so: bin/ld_iscsi.o
	$(CC) -shared -o bin/ld_iscsi.so bin/ld_iscsi.o -ldl
endif
